security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Owner:
            algorithm: bcrypt
        App\Entity\Technician:
            algorithm: bcrypt
        App\Entity\CommercialAgent:
            algorithm: bcrypt
        App\Entity\Client:
            algorithm: bcrypt


    providers:
        owner_provider:
            entity:
                class : App\Entity\Owner
                property: Email
        
        technician_provider:
            entity:
                class: App\Entity\Technician
                property: Email

        commercialagent_provider:
            entity:
                class: App\Entity\CommercialAgent
                property: Email
        
        client_provider:
            entity:
                class: App\Entity\Client
                property: Email

        all_users:
            chain:
                providers: ['owner_provider', 'technician_provider' , 'commercialagent_provider' , 'client_provider']

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false


        user_login:
            pattern: ^/auth/login
            stateless: true
            anonymous: true
            provider: all_users
            json_login:
                check_path: /auth/login
                username_path : email
                password_path : password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure


        api:
            pattern : ^/api
            stateless : true
            provider : all_users
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/auth/login, roles: IS_AUTHENTICATED_ANONMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
